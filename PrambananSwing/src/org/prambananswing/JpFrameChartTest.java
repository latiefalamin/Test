/*
 * creator : Latief Al Amin
 * e-mail  : al _amin_o4_032@yahoo.co.id
 * create  : Oct 2, 2010
 */

/*
 * FrameChartTest.java
 *
 * Created on Oct 27, 2010, 9:45:20 AM
 */

package org.prambananswing;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.IntervalCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.IntervalXYDataset;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.OHLCDataset;
import org.jfree.data.xy.XYZDataset;

/**
 *
 * @author Latief Al Amin
 */
public class JpFrameChartTest extends javax.swing.JFrame {

    /** Creates new form FrameChartTest */
    public JpFrameChartTest() {
        initComponents();
        panelChart.setChart(createPieChart());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new org.prambananswing.swing.panel.JPPanel();
        panelChart = new org.prambananswing.swing.panel.JPPanelChart();
        buttonPie = new javax.swing.JButton();
        buttonRing = new javax.swing.JButton();
        buttonArea = new javax.swing.JButton();
        buttonBubble = new javax.swing.JButton();
        buttonBar = new javax.swing.JButton();
        buttonBoxAndWhisker = new javax.swing.JButton();
        buttonCandlestick = new javax.swing.JButton();
        buttonGantt = new javax.swing.JButton();
        buttonHighLow = new javax.swing.JButton();
        buttonHistogram = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Demo JpPanelChart");

        panelChart.setAlphaTransparency(1.0F);
        panelChart.setOpaque(false);

        javax.swing.GroupLayout panelChartLayout = new javax.swing.GroupLayout(panelChart);
        panelChart.setLayout(panelChartLayout);
        panelChartLayout.setHorizontalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 674, Short.MAX_VALUE)
        );
        panelChartLayout.setVerticalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 439, Short.MAX_VALUE)
        );

        buttonPie.setText("Pie");
        buttonPie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPieActionPerformed(evt);
            }
        });

        buttonRing.setText("Ring");
        buttonRing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRingActionPerformed(evt);
            }
        });

        buttonArea.setText("Area");
        buttonArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAreaActionPerformed(evt);
            }
        });

        buttonBubble.setText("Bubble");
        buttonBubble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBubbleActionPerformed(evt);
            }
        });

        buttonBar.setText("Bar");
        buttonBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBarActionPerformed(evt);
            }
        });

        buttonBoxAndWhisker.setText("BoxAndWhisker");
        buttonBoxAndWhisker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBoxAndWhiskerActionPerformed(evt);
            }
        });

        buttonCandlestick.setText("Candlestick");
        buttonCandlestick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCandlestickActionPerformed(evt);
            }
        });

        buttonGantt.setText("Gantt");
        buttonGantt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGanttActionPerformed(evt);
            }
        });

        buttonHighLow.setText("HighLow");
        buttonHighLow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHighLowActionPerformed(evt);
            }
        });

        buttonHistogram.setText("Histogram");
        buttonHistogram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHistogramActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(buttonPie)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRing)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonArea)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBubble)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBoxAndWhisker)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCandlestick)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonGantt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonHighLow))
                    .addComponent(buttonHistogram))
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonPie)
                    .addComponent(buttonRing)
                    .addComponent(buttonArea)
                    .addComponent(buttonBubble)
                    .addComponent(buttonBar)
                    .addComponent(buttonBoxAndWhisker)
                    .addComponent(buttonCandlestick)
                    .addComponent(buttonGantt)
                    .addComponent(buttonHighLow))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonHistogram)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-702)/2, (screenSize.height-553)/2, 702, 553);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPieActionPerformed
        panelChart.setChart(createPieChart());
    }//GEN-LAST:event_buttonPieActionPerformed

    private void buttonRingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRingActionPerformed
        panelChart.setChart(createRingChart());
    }//GEN-LAST:event_buttonRingActionPerformed

    private void buttonAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAreaActionPerformed
        panelChart.setChart(createAreaChart());
    }//GEN-LAST:event_buttonAreaActionPerformed

    private void buttonBubbleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBubbleActionPerformed
        panelChart.setChart(createBubbleChart());
    }//GEN-LAST:event_buttonBubbleActionPerformed

    private void buttonBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBarActionPerformed
        panelChart.setChart(createBarChart());
    }//GEN-LAST:event_buttonBarActionPerformed

    private void buttonBoxAndWhiskerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBoxAndWhiskerActionPerformed
        panelChart.setChart(createBoxAndWhiskerChart());
    }//GEN-LAST:event_buttonBoxAndWhiskerActionPerformed

    private void buttonCandlestickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCandlestickActionPerformed
        panelChart.setChart(createCandlestickChart());
    }//GEN-LAST:event_buttonCandlestickActionPerformed

    private void buttonGanttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGanttActionPerformed
        panelChart.setChart(createGanttChart());
    }//GEN-LAST:event_buttonGanttActionPerformed

    private void buttonHighLowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHighLowActionPerformed
        panelChart.setChart(createHighLowChart());
    }//GEN-LAST:event_buttonHighLowActionPerformed

    private void buttonHistogramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHistogramActionPerformed
        panelChart.setChart(createHistogramChart());
    }//GEN-LAST:event_buttonHistogramActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JpFrameChartTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonArea;
    private javax.swing.JButton buttonBar;
    private javax.swing.JButton buttonBoxAndWhisker;
    private javax.swing.JButton buttonBubble;
    private javax.swing.JButton buttonCandlestick;
    private javax.swing.JButton buttonGantt;
    private javax.swing.JButton buttonHighLow;
    private javax.swing.JButton buttonHistogram;
    private javax.swing.JButton buttonPie;
    private javax.swing.JButton buttonRing;
    private org.prambananswing.swing.panel.JPPanel panel;
    private org.prambananswing.swing.panel.JPPanelChart panelChart;
    // End of variables declaration//GEN-END:variables

    private BoxAndWhiskerCategoryDataset createBoxAndWhiskerCategoryDataset(){
        DefaultBoxAndWhiskerCategoryDataset data = new DefaultBoxAndWhiskerCategoryDataset();
        List list1 = new ArrayList();
        list1.add(100);
        list1.add(100);
        list1.add(100);
        data.add(list1, "satu", "satu");
        List list2 = new ArrayList();
        list2.add(200);
        list2.add(200);
        list2.add(200);
        data.add(list2, "dua", "dua");
        List list3 = new ArrayList();
        list3.add(300);
        list3.add(300);
        list3.add(300);
        data.add(list3, "tiga", "tiga");
        List list4 = new ArrayList();
        list4.add(400);
        list4.add(400);
        list4.add(400);
        data.add(list4, "empat", "empat");
        return data;
    }

    private CategoryDataset createCategoryDataset(){
        DefaultCategoryDataset data = new DefaultCategoryDataset();
        data.addValue(100, "satu", "satu = 100");
        data.addValue(200, "dua", "dua = 200");
        data.addValue(300, "tiga", "tiga = 300");
        data.addValue(400, "empat", "empat = 400");
        return data;
    }

    private IntervalCategoryDataset createIntervalCategoryDataset(){
        Integer [][] starts = {{1,6,7},{14,5,9}};
        Integer [][] ends ={{10,21,11},{9,15,7}};
        DefaultIntervalCategoryDataset data = new DefaultIntervalCategoryDataset(starts, ends);
        return data;
    }

    private IntervalXYDataset createIntervalXYDataset(){
        DefaultIntervalXYDataset data = new DefaultIntervalXYDataset();
        double [][] d1 = {{120D,310D},{130D,105D},{908D,90D},{201D,10D},{100D,168D},{170D,134D}};
        data.addSeries("satu", d1);
        double [][] d2 = {{20D,20D},{20D,20D},{20D,20D},{20D,20D},{20D,20D},{20D,20D}};
        data.addSeries("dua", d2);
        double [][] d3 = {{30D,30D},{30D,30D},{30D,30D},{30D,30D},{30D,30D},{30D,30D}};
        data.addSeries("tiga", d3);
        return data;
    }

    private OHLCDataset createOHLCDataset(){
        OHLCDataItem dataItem1 = new OHLCDataItem(new Date(), 100D, 100D, 100D, 100D, 100D);
        OHLCDataItem dataItem2 = new OHLCDataItem(new Date(), 220D, 230D, 240D, 250D, 260D);
        OHLCDataItem dataItem3 = new OHLCDataItem(new Date(), 300D, 300D, 300D, 300D, 300D);
        OHLCDataItem dataItem4 = new OHLCDataItem(new Date(), 400D, 400D, 400D, 400D, 400D);
        OHLCDataItem [] dataItemes = {dataItem1,dataItem2,dataItem3,dataItem4};
        DefaultOHLCDataset data = new DefaultOHLCDataset("data", dataItemes);
        return data;
    }

    private PieDataset createPieDataset(){
        DefaultPieDataset data = new DefaultPieDataset();
        data.setValue("100", 100);
        data.setValue("200", 200);
        data.setValue("300", 300);
        data.setValue("400", 400);
        return data;
    }

    private XYZDataset createXYZDataset(){
        DefaultXYZDataset data = new DefaultXYZDataset();
        double [][] d1 = {{10D,10D},{10D,10D},{10D,10D}};
        data.addSeries("satu", d1);
        double [][] d2 = {{20D,20D},{20D,20D},{20D,20D}};
        data.addSeries("dua", d2);
        double [][] d3 = {{30D,30D},{30D,30D},{30D,30D}};
        data.addSeries("tiga", d3);
        return data;
    }

    private JFreeChart createAreaChart(){
        return ChartFactory.createAreaChart("Area Chart", "Category", "Value", createCategoryDataset(), PlotOrientation.VERTICAL, true, true, true);
    }

    private JFreeChart createBarChart(){
        return ChartFactory.createBarChart3D("Bar 3D Chart", "Category", "Value", createCategoryDataset(), PlotOrientation.VERTICAL, true, true, true);
    }

    private JFreeChart createBoxAndWhiskerChart(){
//        JFreeChart chart = ChartFactory.
        return ChartFactory.createBoxAndWhiskerChart("BoxAndWhisker Chart", "Category", "Value", createBoxAndWhiskerCategoryDataset(), true);
    }

    private JFreeChart createBubbleChart(){
        return ChartFactory.createBubbleChart("Bubble Chart", "X Axis", "Y Axis", createXYZDataset(), PlotOrientation.VERTICAL, true, true, true);
    }

    private JFreeChart createCandlestickChart(){
        return ChartFactory.createCandlestickChart("Candlestick Chart", "Time", "Value", createOHLCDataset(), true);
    }

    private JFreeChart createGanttChart(){
        return ChartFactory.createGanttChart("Gantt Chart", "Category", "Date", createIntervalCategoryDataset(), true, true, true);
    }

    private JFreeChart createHighLowChart(){
        return ChartFactory.createHighLowChart("HighLow Chart", "Time", "Value", createOHLCDataset(), true);
    }

    private JFreeChart createHistogramChart(){
        return ChartFactory.createHistogram("Histogram Chart", "X Axis", "Y Axis", createIntervalXYDataset(), PlotOrientation.VERTICAL, true, true, true);
    }

    private JFreeChart createPieChart(){
        JFreeChart chart = ChartFactory.createPieChart3D("Pie Chart", createPieDataset(), false, true, true);
        return chart;
    }

    private JFreeChart createRingChart(){
        return ChartFactory.createRingChart("Ring Chart", createPieDataset(), true, true, true);
    }
}
